
<!-- saved from url=(0051)http://minich.com/education/wyo/acsl/lisp/index.htm -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>ACSL - LISP</title>
</head>

<body bgcolor="#FFFFFF">

<p align="center"><big><strong>LISP</strong></big></p>

<p><a href="http://minich.com/education/wyo/acsl/lisp/lispwksht1.htm">worksheet #1</a>, <a href="http://minich.com/education/wyo/acsl/lisp/lispwksht2.htm">worksheet 
  #2</a>, <a href="http://minich.com/education/wyo/acsl/lisp/lispwksht3.htm">worksheet #3</a>, <a href="http://minich.com/education/wyo/acsl/lisp/lispwksht4.htm">worksheet 
  #4</a></p>
<p>LISP stands for <strong>LIS</strong>t <strong>P</strong>rocessing language, 
  which was developed in the 1950's. It is still used in artificial intelligence 
  (AI) programming today. LISP follows a functional paradigm of programming rather 
  than procedural (like older versions of BASIC and object-oriented like C++.) 
</p>

<p>Everything in a LISP program is either an atom or a list. Lists are actually groups of
atoms. A LISP program is simply a set of functions which must be evaluated from innermost
parentheses outwards in a left to right manner.</p>

<p><strong>A few important functions that are defined in LISP are:</strong> </p>

    
<table border="1" cellpadding="2" width="550" height="734" align="left">
  <tbody><tr> 
    <td width="12%" align="center" bgcolor="#00FFFF"><font size="-1"><strong>Function</strong></font></td>
    <td width="25%" align="center" bgcolor="#00FFFF"><font size="-1"><strong>Description</strong></font></td>
    <td width="29%" align="center" bgcolor="#00FFFF"><font size="-1"><strong>Example</strong></font></td>
    <td width="34%" align="center" bgcolor="#00FFFF"><font size="-1"><b>Visual 
      Basic equivalent</b></font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">SETQ</font></td>
    <td width="25%"><font size="-1">serves as the assignment operator; it "sets" 
      a variables value</font></td>
    <td width="29%"><font size="-1">(SETQ a 22) </font> 
      <p><font size="-1">a is assigned the value of 22</font> 
    </p></td>
    <td width="34%"><font size="-1">a = 22</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">ADD</font></td>
    <td width="25%"><font size="-1">adds two atoms</font></td>
    <td width="29%"><font size="-1">(ADD a b) </font> 
      <p><font size="-1">a and b are added together</font> 
    </p></td>
    <td width="34%"><font size="-1">a + b</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">SUB</font></td>
    <td width="25%"><font size="-1">subtracts two atoms</font></td>
    <td width="29%"><font size="-1">(SUB m 3) </font> 
      <p><font size="-1">3 is subtracted from m</font> 
    </p></td>
    <td width="34%"><font size="-1">m - 3</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">MULT</font></td>
    <td width="25%"><font size="-1">multiplies two atoms</font></td>
    <td width="29%"><font size="-1">(MULT 2 14) </font> 
      <p><font size="-1">2 is multiplied with 14 to obtain 28</font> 
    </p></td>
    <td width="34%"><font size="-1">2 * 14</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">DIV</font></td>
    <td width="25%"><font size="-1">divides two atoms</font></td>
    <td width="29%"><font size="-1">(DIV 24 2) </font> 
      <p><font size="-1">24 is divided by 2 to obtain 12</font> 
    </p></td>
    <td width="34%"><font size="-1">24 / 2</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">SQUARE</font></td>
    <td width="25%"><font size="-1">squares a number</font></td>
    <td width="29%"><font size="-1">(SQUARE 3) </font> 
      <p><font size="-1">3 is multiplied with itself to obtain 9</font> 
    </p></td>
    <td width="34%"><font size="-1">3 ^ 2</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">CAR</font></td>
    <td width="25%"><font size="-1">strips the first atom off of a list</font></td>
    <td width="29%"><font size="-1">(CAR (2 3 4)) </font> 
      <p><font size="-1">2 is the result since it is the first atom of the list 
        (2 3 4)</font> 
    </p></td>
    <td width="34%"><font size="-1">n/a</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">CDR</font></td>
    <td width="25%"><font size="-1">strips the first atom off of a list but returns 
      the remaining list</font></td>
    <td width="29%"><font size="-1">(CDR (2 3 4)) </font> 
      <p><font size="-1">the list (3 4) is the answer since the first atom 2 is 
        stripped off and "thrown away"</font> 
    </p></td>
    <td width="34%"><font size="-1">n/a</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">EXP</font></td>
    <td width="25%"><font size="-1">computes the power of two arguments</font></td>
    <td width="29%"> 
      <p><font size="-1">(EXP 2 3)</font></p>
      <p><font size="-1">8 is the result since 2 to the third power is 8</font></p>
    </td>
    <td width="34%"><font size="-1">2 ^ 3</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">REVERSE</font></td>
    <td width="25%"><font size="-1">reverses each of the atoms within a list</font></td>
    <td width="29%"><font size="-1">(REVERSE (2 3 4)) </font> 
      <p><font size="-1">results in the list (4 3 2)</font> 
    </p></td>
    <td width="34%"><font size="-1">n/a</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">&nbsp;&nbsp;&nbsp; ' (apostrophe)</font></td>
    <td width="25%"><font size="-1">the apostrophe acts similarly to double quotes 
      in BASIC or C++; it tells you to treat what follows it as one list and not 
      to evaluate that list</font></td>
    <td width="29%"><font size="-1">(SETQ A (MULT 2 3)) </font> 
      <p><font size="-1">causes A to be assigned the value 6</font></p>
      <p><font size="-1">(SETQ A '(MULT 2 3))</font></p>
      <p><font size="-1">causes A to be assigned the list (MULT 2 3) which is 
        not evaluated due to the single apostrophe</font> 
    </p></td>
    <td width="34%"><font size="-1">n/a</font></td>
  </tr>
  <tr> 
    <td width="12%"><font size="-1">DEF</font></td>
    <td width="25%"><font size="-1">defines a function</font></td>
    <td width="29%"><font size="-1">(DEF addsOne(x) (ADD x 1))</font></td>
    <td width="34%"><font size="-1">Function addsone(x As Integer) As Integer<br>
      &nbsp;&nbsp;&nbsp;&nbsp;addsOne = addsOne + 1<br>
      End Function</font></td>
  </tr>
</tbody></table>


<p><strong><br>
  <br>
  </strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>Example LISP statements and the resulting returned values:</strong></p>
<table border="1" width="550" align="left">
  <tbody><tr> 
    <td width="33%" bgcolor="#00FFFF" align="center"><font size="-1"><strong>LISP 
      statement</strong></font></td>
    <td width="22%" bgcolor="#00FFFF" align="center"><font size="-1"><strong>Final 
      returned value</strong></font></td>
    <td width="45%" bgcolor="#00FFFF" align="center"><font size="-1"><strong>Explanation</strong></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ a (MULT 2 3)</font></td>
    <td width="22%"><font size="-1">6</font></td>
    <td width="45%"><font size="-1">a is an atom with a value of 6</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ a '(MULT 2 3)</font></td>
    <td width="22%"><font size="-1">(MULT 2 3)</font></td>
    <td width="45%"><font size="-1">a is a list with 3 atoms</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ b 'a)</font></td>
    <td width="22%"><font size="-1">a</font></td>
    <td width="45%"><font size="-1">b is now an atom with a value of the character 
      a (not the variable a) since a single apostrophe preceded a</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ c a)</font></td>
    <td width="22%"><font size="-1">(MULT 2 3)</font></td>
    <td width="45%"><font size="-1">c is a list with 3 atoms</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ TEST (ADD 3 (MULT 2 5)))</font></td>
    <td width="22%"><font size="-1">13</font></td>
    <td width="45%"><font size="-1">test has a value of 13</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ VOWELS '(A E I O U))</font></td>
    <td width="22%"><font size="-1">(A E I O U)</font></td>
    <td width="45%"><font size="-1">VOWELS is a list of 5 atoms</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ x (SETQ y 'same))</font></td>
    <td width="22%"><font size="-1">same</font></td>
    <td width="45%"><font size="-1">both x and y contain the string literal same</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ y 'diff)</font></td>
    <td width="22%"><font size="-1">diff</font></td>
    <td width="45%"><font size="-1">y is now the string literal diff</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ x y)</font></td>
    <td width="22%"><font size="-1">diff</font></td>
    <td width="45%"><font size="-1">x is now the string literal diff also</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ x (ADD 45 8))</font></td>
    <td width="22%"><font size="-1">53</font></td>
    <td width="45%"><font size="-1">x is now 53</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ Y '(ADD X 11))</font></td>
    <td width="22%"><font size="-1">(ADD X 11)</font></td>
    <td width="45%"><font size="-1">Y is a list with 3 atoms (uppercase Y that 
      is)</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(REVERSE '(8 7 6))</font></td>
    <td width="22%"><font size="-1">(6 7 8)</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(REVERSE '(1 (2 3 4) 5 6)</font></td>
    <td width="22%"><font size="-1">(6 5 (2 3 4) 1)</font></td>
    <td width="45%"><font size="-1">do not reverse the atoms 2, 3, &amp; 4 which 
      are contained in the list (2 3 4) since the list (2 3 4) is actually an 
      atom of the whole list to be reversed</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CAR '(This is a list))</font></td>
    <td width="22%"><font size="-1">This</font></td>
    <td width="45%"><font size="-1">The final value here is an atom This not a 
      list since the function CAR always returns an atom</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CAR (CDR '(This is a list)))</font></td>
    <td width="22%"><font size="-1">is</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ x (CDR (CDR '(a b c d))))</font></td>
    <td width="22%"><font size="-1">(c d)</font></td>
    <td width="45%"><font size="-1">x is now the list (c d)</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CDR '(This is a list))</font></td>
    <td width="22%"><font size="-1">(is a list)</font></td>
    <td width="45%"><font size="-1">CDR always returns a list</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CAR '(hi))</font></td>
    <td width="22%"><font size="-1">hi</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CDR '(one))</font></td>
    <td width="22%"><font size="-1">NIL</font></td>
    <td width="45%"><font size="-1">if you take out the first element of the list 
      (one) you have an empty list ( ) which is referred to as NIL by LISP</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CAR '((1) (2 3) (4 5 6)))</font></td>
    <td width="22%"><font size="-1">(1)</font></td>
    <td width="45%"><font size="-1">Even though CAR always returns an atom, the 
      first atom of the list ((1) (2 3) (4 5 6)) is the list (1)</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CDR (CAR '(( red white) blue)))</font></td>
    <td width="22%"><font size="-1">(white)</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CAR 'hi)</font></td>
    <td width="22%"><font size="-1">error</font></td>
    <td width="45%"><font size="-1">CAR can only be applied to lists and hi is 
      not a list</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CAR ( ) )</font></td>
    <td width="22%"><font size="-1">error</font></td>
    <td width="45%"><font size="-1">CAR cannot return an atom as the final answer 
      here since there are no atoms in an empty list</font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CAR '(ADD 2 2))</font></td>
    <td width="22%"><font size="-1">ADD</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(CDR '(( red green) (blue white))</font></td>
    <td width="22%"><font size="-1">((blue white))</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ area (MULT 2 3))</font></td>
    <td width="22%"><font size="-1">6</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
  <tr> 
    <td width="33%"><font size="-1">(SETQ fruit '(apple orange))</font></td>
    <td width="22%"><font size="-1">(apple orange)</font></td>
    <td width="45%"><font size="-1"></font></td>
  </tr>
</tbody></table>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp; </p>
<p>Associated LISP references:</p>
<p>Gary Steele's <a href="http://www.cs.cmu.edu/Groups/AI/html/cltl/cltl2.html">LISP 
  Programming Textbook</a><br>
  An <a href="http://www.cs.tulane.edu/www/Villamil/lisp/lisp1.html">interactive 
  LISP tutorial </a>- see <a href="http://www.eecs.tulane.edu/webcourses/lisp/lisp3.html">this 
  page</a> for the interactive part<br>
</p>
<hr width="550" align="left">
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://minich.com/education/wyo/acsl/index.htm">ACSL 
  Home Page</a> | <a href="http://minich.com/education/wyo/index.htm">Mr. Minich's Wyo Home Page</a> | <a href="http://www.minich.com/">Minich.com 
  Web Design</a></p>


</body></html>